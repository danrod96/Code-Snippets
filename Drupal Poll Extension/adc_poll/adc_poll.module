<?php

/**
 * @file
 */

/**
 * Implements hook_form_alter().
 */
function adc_poll_form_alter(&$form, &$form_state, $form_id) {
  global $base_url;

  switch ($form_id) {
    case 'poll_node_form':
      $form['settings']['runtime']['#access'] = FALSE;
      $form['field_fecha_publicacion']['#access'] = FALSE;
      $form['#validate'][] = '_poll_node_form_validate';
      break;

    case 'poll_view_voting':
      //adds a new submit function
      $nid = $form['#node']->nid;
      $form['vote']["#suffix"] = "<a href='$base_url/node/$nid/result'>Ver votos</a>";
      $form['vote']["#submit"][] = "_adc_poll_update_ip";
      $form["#submit"][] = "_adc_poll_update_ip";
      break;

    default:
      # code...
      break;
  }
}

function _poll_node_form_validate($form, $form_state){
	$form_state['values']['field_fecha_publicacion']['und'][0]['value'] =
		strtotime($form_state['values']['publish_on'])
	;
}

/**
 * Implements hook_node_load().
 */
function adc_poll_node_load($nodes, $types)
{
	global $user;

	//result view
	//if user is at the /node/result page, dont allow him/her to vote
	if (arg(0) == "node" && arg(2) == "result"){
		foreach ($nodes as $node) {
			if ($node->type == "poll"){
				$node->allowvotes = FALSE;
			}

			//hide tabs
			if ($user->uid != 1){
				drupal_add_css('.page-node-result .tabs {display: none;}', array('type' => 'inline'));
			}
		}
	} else if (arg(0) == "node" && arg(2) == "votes" && ($user->uid != 1)) { 
		//votes view
		//hide tabs
		if ($user->uid != 1){
			drupal_add_css('.page-node-result .tabs {display: none;}', array('type' => 'inline'));
		}
		drupal_goto("/node/" . arg(1) . "/result");
	} else {
		//home view
		//always display poll form if user is at the front page
		foreach ($nodes as $node) {
			if ($node->type == "poll"){
				$node->allowvotes = TRUE;
			}
		}
	}
} 

/**
 * Implements hook_load().
 *
 * Maybe this hook is redundant, but we added it just in case
 */
function adc_poll_load($nodes)
{
	global $user;

	//result view
	if (arg(0) == "node" && arg(2) == "result"){
		foreach ($nodes as $node) {
			if ($node->type == "poll"){
				$node->allowvotes = FALSE;
			}

			//hide tabs
			if ($user->uid != 1){
				drupal_add_css('.page-node-result .tabs {display: none;}', array('type' => 'inline'));
			}
		}
	} else if (arg(0) == "node" && arg(2) == "votes" && ($user->uid != 1)) { 
		//votes view
		//hide tabs
		if ($user->uid != 1){
			drupal_add_css('.page-node-result .tabs {display: none;}', array('type' => 'inline'));
		}
		drupal_goto("/node/" . arg(1) . "/result");
	} else {
		//home view
		foreach ($nodes as $node) {
			if ($node->type == "poll"){
				$node->allowvotes = TRUE;
			}
		}
	}

	return $node;
}


/**
 * Implements hook_view().
 */
function adc_poll_view($node, $view_mode) 
{
  if ($node->type == "poll"){
  	$node->content['poll_view_voting'] = drupal_get_form('poll_view_voting', $node);
  }

  return $node;
} 

/**
 * Submit function for updating the last vote record
 */
function _adc_poll_update_ip(&$form, &$form_state)
{
	global $user;

	//read poll values
	$uid = $user->uid;
	$nid = $form_state['build_info']['args'][0]->nid;

	//get last poll vote from db
	$result = db_query("SELECT * FROM {poll_vote} WHERE nid = :nid AND uid = :uid ORDER BY timestamp DESC LIMIT 1", array(':nid' => $nid, ':uid' => $uid));

	foreach ($result as $data) {
        $chid = $data->chid;
        $hostname = $data->hostname;
        $timestamp = $data->timestamp;
    }

	//update IP, attach the timestamp at the end of the IP
	//NOTE: It would be better to add a safe random string at the end of the IP instead of the timestamp
	$hostname .= "-" . $timestamp;

	//update poll vote in db
	$updated = db_update('poll_vote')
		->fields(array(
			'hostname' => $hostname
		))
		->condition('chid', $chid, '=')
		->condition('uid', $uid, '=')
		->condition('timestamp', $timestamp, '=')
		->execute();

	//drupal_flush_all_caches();
	cache_clear_all(NULL, 'cache_page', '*');
	cache_clear_all(NULL, 'cache_views', '*');
}
